#Makefile include include.mk.opt
############################## Change Log ##################################
# 1.0.0.2
#
# 000908 MJB include.mk-mrc ##
#            Added MAKE environment varaible.
#            Added free format option to F_OPTS for some platforms. ##
# 000907 MJB include.mk-mrc ##
#            Changed the defualts to no NCAR Graphics and no parallel.
#            Also commented out the machine specifics to force the user to
#            select the appropriate machine for them. ##
# 000823 MJB include.mk-mrc ##
#            New - defines all make environment varaibles and is included
#            in all make files. ##
#
############################################################################

# Define make (gnu make works best).

MAKE=/usr/bin/make

# libraries.

BASE=$(ED_ROOT)/build/

# Activate appropriate parts below, comment out others.

# HDF 5  Libraries
# ED2 HAS OPTIONAL HDF 5 I/O
# If you wish to use this functionality specify USE_HDF5=1
# and specify the location of the include directory
# library files. Make sure you include the zlib.a location too.

USE_HDF5=1

HDF5_INCS=-I/usr/include/hdf5/serial
HDF5C_INCS=${HDF5_INCS}
HDF5_LIBS=-L/usr/lib/x86_64-linux-gnu/hdf5/serial -lhdf5 -lhdf5_fortran -lhdf5_hl -lz

USE_COLLECTIVE_MPIO=0
 
#---------------------------------------------------------------

# netCDF libraries ---------------------------------------------
# If you have netCDF set USENC=1 and type the lib folder
# at NC_LIBS, with the leading -L (e.g. -L/usr/local/lib).
# If you don't have it, leave USENC=0 and type a dummy
# folder for NC_LIBS (e.g. -L/dev/null or leave it blank)
USENC=0
NC_LIBS=-L/dev/null
# --------------------------------------------------------------

# interface ----------------------------------------------------
# This should be 1 unless you are running with -gen-interfaces.
# Interfaces usually make the compilation to crash when the 
# -gen-interfaces option are on, so this flag bypass all 
# interfaces in the code.
USE_INTERF=1

# MPI_Wtime. ---------------------------------------------------
# If USE_MPIWTIME=1, then it will use MPI libraries to compute
# the wall time (the only double-precision intrinsic).  In case
# you don't have it, leave USE_MPIWTIME=0, in which case it will
# use a simpler, single-precision function.
USE_MPIWTIME=1

#----------------- gfortran on Linux -----------
CMACH=PC_GFORTRAN
# F_COMP=mpif90
# C_COMP=mpicc 
# LOADER=mpif90
F_COMP=gfortran
C_COMP=gcc 
LOADER=gfortran
##################################### COMPILER OPTIONS #####################################
#------------------------------------------------------------------------------------------#
# A/B/C/D. Debugging, strictest compilation flags, lowest performance.                     #
# E.       Running, most relaxed compilation flags, highest performance.                   #
#------------------------------------------------------------------------------------------#
ifeq ($(KIND_COMP),)
   KIND_COMP=E
endif
ifeq ($(KIND_COMP),$(filter $(KIND_COMP), A B C D))
   F_OPTS=-g -pg -ffree-line-length-none -fno-whole-file -O0 -ffpe-trap=invalid,zero,overflow -fbounds-check
   C_OPTS= -g -pg -O0 -ffpe-trap=invalid,zero,overflow -fbounds-check
   LOADER_OPTS=${F_OPTS}
endif
ifeq ($(KIND_COMP),E)
   F_OPTS=-g -pg -ffree-line-length-none -fno-whole-file -O2 #-ffpe-trap=invalid,zero,overflow -fbounds-check  #-O2
   C_OPTS=-g -pg -O2 #-ffpe-trap=invalid,zero,overflow -fbounds-check #-O2
   LOADER_OPTS=${F_OPTS}
endif

LIBS=
MOD_EXT=mod

# If compiling for a single-CPU platform only (without MPI):

#-----------------------------------------------------------------
#PAR_LIBS=
#PAR_DEFS=
#-----------------------------------------------------------------

# Else if using MPI libraries:

#---------------If using scritps 'mpicc' e 'mpif90'---------------'
MPI_PATH=
PAR_INCS=
PAR_LIBS=
# PAR_DEFS=-DRAMS_MPI
PAR_DEFS=
#-----------------------------------------------------------------

# For IBM,HP,SGI,ALPHA,LINUX use these:
ARCHIVE=ar rs
